{
  "name": "com.unity.transport",
  "displayName": "Unity Transport",
  "version": "2.5.1",
  "unity": "2022.3",
  "description": "Unity network transport layer - the low-level interface for connecting and sending data through a network",
  "dependencies": {
    "com.unity.collections": "2.2.1",
    "com.unity.burst": "1.8.12",
    "com.unity.mathematics": "1.3.1"
  },
  "relatedPackages": {
    "com.unity.transport.tests": "0.0.0"
  },
  "_upm": {
    "changelog": "### Changes\n* Changed Path MTU discovery to default to off. It can be enabled using network config parameters.\n\n### Fixes\n* When Path MTU discovery is enabled and a transport connects to a peer that doesn't support it (such as an older version of transport), when discovery times out, it will now revert to previous behavior of using the configured MaxMessageSize rather than using 1024 bytes."
  },
  "upmCi": {
    "footprint": "f8e0bf5ef1a0b9fe4abbf890a9d4fcc4a97f7235"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.transport@2.5/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/com.unity.transport.git",
    "type": "git",
    "revision": "480f597f6f20d8247be3b9e7cc1e6ac41a9e805f"
  },
  "samples": [
    {
      "displayName": "Cross-play Example",
      "description": "Example of how to use MultiNetworkDriver to create a server that accepts both UDP and WebSocket connections.",
      "path": "Samples~/CrossPlay"
    },
    {
      "displayName": "Jobified Client and Server",
      "description": "Very simple client and server implementations using jobs. Meant to tie in with the package documentation.",
      "path": "Samples~/JobifiedClientServer"
    },
    {
      "displayName": "Ping Sample",
      "description": "Small application to compute round-trip time (ping) between client and server.",
      "path": "Samples~/Ping"
    },
    {
      "displayName": "Ping Sample (with Relay)",
      "description": "Small application to compute round-trip time (ping) between client and host, using Unity Relay.",
      "path": "Samples~/RelayPing"
    },
    {
      "displayName": "Simple Client and Server",
      "description": "Simplest possible client and server implementations. Meant to tie in with the package documentation.",
      "path": "Samples~/SimpleClientServer"
    }
  ]
}
